name: Windows-Release

on:
  push:
    branches:
    - 'release/**'

jobs:
  pre_job:
    name: Build Preparation
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.check_skip.outputs.should_skip }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Check for build skip
        id: check_skip
        run: bash ci/check-skip.sh
  build-and-package:
    name: Build (Visual Studio)
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
    - name: 'Get release branch version'
      uses: valadas/get-release-branch-version@v1
      id: branchVersion
    - name: Get current time
      uses: josStorer/get-current-time@v2.0.1
      id: current-time
      with:
        format: YYYYMMDD-HH
    - name: Run upversion script
      env:
        old_version: ${{ steps.previoustag.outputs.tag }}
        new_version: ${{ steps.branchVersion.major }}.${{ steps.branchVersion.minor }}
        old_year: 2006-${{ steps.current-time.outputs.year }}
        new_year: 2006-${{ steps.current-time.outputs.year }}
      run: python .\tools\upversion\upversion.py
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Install Python packages
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          b2sdk
    - name: Prepare build
      run: .\ci\win-buildgen.ps1
    - name: Turn on problem matcher
      uses: ammaraskar/msvc-problem-matcher@master
    - name: Run build
      run: cmake --build .\build\ --config RelWithDebInfo --parallel
    - name: Prepare artifact
      run: .\ci\win-artifact.ps1
    - name: Run build powershell
      shell: pwsh
      run: |
        .\installer\windows\build_release.ps1
    - name: Upload artifact to B2
      run: python .\ci\upload-b2.py .\build\archive Win-x64
      env:
        B2_APP_KEY: ${{ secrets.B2_APP_KEY }}
        B2_BUCKET_ID: ${{ secrets.B2_BUCKET_ID }}
        B2_KEY_ID: ${{ secrets.B2_KEY_ID }}
    - name: Upload artifact to Github
      uses: actions/upload-artifact@v2
      with:
        name: Odamex-Win-x64
        path: 'build/artifact/*'
  build-and-package-x32:
    name: Build (Visual Studio, 32-bit)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
    - name: 'Get next minor version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}
    - name: Get current time
      uses: josStorer/get-current-time@v2.0.1
      id: current-time
      with:
        format: YYYYMMDD-HH
    - name: Run upversion script
      env:
        old_version: ${{ steps.previoustag.outputs.tag }}
        new_version: ${{ steps.semvers.outputs.patch }}
        old_year: 2006-${{ steps.current-time.outputs.year }}
        new_year: 2006-${{ steps.current-time.outputs.year }}
      run: python .\tools\upversion\upversion.py
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Install Python packages
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          b2sdk
    - name: Prepare build
      run: .\ci\win-x32-buildgen.ps1
    - name: Run build
      run: cmake --build .\build-x32\ --config RelWithDebInfo --parallel
    - name: Prepare artifact
      run: .\ci\win-x32-artifact.ps1
    - name: Run build powershell
      shell: pwsh
      run: |
        .\installer\windows\build_release.ps1
    - name: Upload artifact to B2
      run: python .\ci\upload-b2.py .\build-x32\archive Win-x32
      env:
        B2_APP_KEY: ${{ secrets.B2_APP_KEY }}
        B2_BUCKET_ID: ${{ secrets.B2_BUCKET_ID }}
        B2_KEY_ID: ${{ secrets.B2_KEY_ID }}
    - name: Upload artifact to Github
      uses: actions/upload-artifact@v2
      with:
        name: Odamex-Win-x32
        path: 'build/artifact/*'
#  upload:
#    name: Upload all artifacts to Github Artifacts
#    runs-on: windows-latest
  # build-mingw:
  #   name: Build (MinGW)
  #   runs-on: windows-latest
  #   steps:
  #   - name: Checkout source
  #     uses: actions/checkout@v2
  #   - name: Checkout submodules
  #     run: git submodule update --init --recursive
  #   - name: Install packages
  #     uses: crazy-max/ghaction-chocolatey@v1
  #     with:
  #       args: install ninja
  #   - name: Prepare build
  #     run: .\ci\win-mingw-buildgen.ps1
  #   - name: Run build
  #     run: cmake --build .\build-gcc\
